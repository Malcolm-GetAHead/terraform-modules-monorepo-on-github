      # - name: AWS Login with Read-Only Role
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-region: us-east-1
      #     role-to-assume: ${{ vars.AWS_TF_READONLY_ROLE }}

      # - name: Terraform-Compliance check
      #   id: tf_compliance
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #       declare -A compliance_scan
      #       declare -A tfplan_output
      #       rtn_chk=0
      #       init_dir="${{ github.workspace }}"

      #       which terraform-compliance terraform
            
      #       while read -r tf_dir; do
      #         if [ -d "${init_dir}/${tf_dir}" ]; then
      #           cd "${init_dir}/${tf_dir}"
      #           tfplan_output["$tf_dir"]="$(terraform plan -no-color -out tf.plan 2>&1 || true)"
      #           compliance_scan["$tf_dir"]="$(terraform-compliance --no-ansi -f "$TF_COMPLIANCE_DIR" -p tf.plan 2>&1  || true)"
      #         else
      #           compliance_scan["$tf_dir"]="  Unable to check directory"
      #         fi
      #       done <<< '${{ steps.pr_details.outputs.changed_dirs }}'

      #       output=""
      #       for key in "${!compliance_scan[@]}"; do
      #         if [ "$(echo "${compliance_scan[$key]}" | tr -d '[:space:]' | tr -d '\n')" != "" ]; then
      #           output+="========\nModule: $key\n======== \n${compliance_scan[$key]}\n\n"
      #         fi
      #       done
            
      #       plan_output=""
      #       for key in "${!tfplan_output[@]}"; do
      #         if [ "$(echo "${tfplan_output[$key]}" | tr -d '[:space:]' | tr -d '\n')" != "" ]; then
      #           plan_output+="========\nModule: $key\n========\n${tfplan_output[$key]}\n\n"
      #         fi
      #       done

      #       echo "exit=${rtn_chk}"  >> "$GITHUB_OUTPUT"
      #       {
      #         echo "output<<EOF"
      #         echo -e "$output"
      #         echo "EOF"

      #         echo "plan_output<<EOF"
      #         echo -e "$plan_output"
      #         echo "EOF"
      #       }  >> "$GITHUB_OUTPUT"

      #       echo -e "Output: ${output}"
      #       echo -e "Plan Output: ${plan_output}"
